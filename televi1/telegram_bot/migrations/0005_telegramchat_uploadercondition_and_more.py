# Generated by Django 4.2.13 on 2024-07-27 09:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('telegram_bot', '0004_remove_uploadercondition_polymorphic_ctype_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tid', models.BigIntegerField(unique=True)),
                ('type', models.CharField(choices=[('private', 'Private'), ('group', 'Group'), ('supergroup', 'Supergroup'), ('channel', 'Channel')], max_length=10)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_forum', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploaderCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='telegramuploader',
            name='must_join_chat_ids',
        ),
        migrations.CreateModel(
            name='JoinChatUploaderCondition',
            fields=[
                ('uploadercondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='telegram_bot.uploadercondition')),
            ],
            options={
                'abstract': False,
            },
            bases=('telegram_bot.uploadercondition',),
        ),
        migrations.CreateModel(
            name='UploaderUploaderCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='telegram_bot.uploadercondition')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='telegram_bot.telegramuploader')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelegramChatMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ChatMemberStatus.CREATOR', 'Creator'), ('ChatMemberStatus.ADMINISTRATOR', 'Administrator'), ('ChatMemberStatus.MEMBER', 'Member'), ('ChatMemberStatus.RESTRICTED', 'Restricted'), ('ChatMemberStatus.LEFT', 'Left'), ('ChatMemberStatus.KICKED', 'Kicked')], max_length=31)),
                ('tbot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='telegram_bot.telegrambot')),
                ('tchat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='telegram_bot.telegramchat')),
                ('tuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='telegram_bot.telegramuser')),
            ],
        ),
        migrations.AddField(
            model_name='telegramuploader',
            name='conditions',
            field=models.ManyToManyField(related_name='telegramuploaders', through='telegram_bot.UploaderUploaderCondition', to='telegram_bot.uploadercondition'),
        ),
        migrations.AddConstraint(
            model_name='telegramchatmember',
            constraint=models.UniqueConstraint(condition=models.Q(('tbot__isnull', False)), fields=('tbot', 'tchat'), name='unique_tbot_chat_condition'),
        ),
        migrations.AddConstraint(
            model_name='telegramchatmember',
            constraint=models.UniqueConstraint(condition=models.Q(('tuser__isnull', False)), fields=('tuser', 'tchat'), name='unique_tuser_chat_condition'),
        ),
        migrations.AddConstraint(
            model_name='telegramchatmember',
            constraint=models.CheckConstraint(check=models.Q(models.Q(models.Q(('tbot__isnull', True), ('tuser__isnull', False)), models.Q(('tbot__isnull', False), ('tuser__isnull', True)), _connector='OR')), name='one_of_tbot_or_tuser'),
        ),
        migrations.AddField(
            model_name='joinchatuploadercondition',
            name='tchat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='telegram_bot.telegramchat'),
        ),
    ]
